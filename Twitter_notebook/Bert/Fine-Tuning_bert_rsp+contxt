{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Fine-Tuning_bert_rsp+contxt","provenance":[{"file_id":"1ftGKQ22ZBSIX_d6KEpUI7vRczYgtQPMF","timestamp":1620983839237},{"file_id":"https://github.com/prateekjoshi565/Fine-Tuning-BERT/blob/master/Fine_Tuning_BERT_for_Spam_Classification.ipynb","timestamp":1619947106006}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"6f76dabeee284d0b981b0f98714d6181":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_691739b7c6b647ceaa1512d91650b792","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_178b325d939d4e288c95473e48a4e51f","IPY_MODEL_e9bb09145c054709b8ddb9ac5c84adb8"]}},"691739b7c6b647ceaa1512d91650b792":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"178b325d939d4e288c95473e48a4e51f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_bab8af2dc9714c6ca228cb71632679e1","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":762,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":762,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_6713399bec52464886c7fbab46251cf1"}},"e9bb09145c054709b8ddb9ac5c84adb8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_295c5fca536144ef9c79f0687653c1fd","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 762/762 [00:33&lt;00:00, 22.4B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0c63d46e125f40dabae4e53f95cda3b9"}},"bab8af2dc9714c6ca228cb71632679e1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"6713399bec52464886c7fbab46251cf1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"295c5fca536144ef9c79f0687653c1fd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"0c63d46e125f40dabae4e53f95cda3b9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5d429e03aad548a29810538a929c3091":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_5590f2853824472f899a2ec8ce66a7a5","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_86e40945682b4768a4ed1c126cd3560f","IPY_MODEL_3f8b6c2103d145f98d816e791e246bf6"]}},"5590f2853824472f899a2ec8ce66a7a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"86e40945682b4768a4ed1c126cd3560f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_f9a9ad33922a435f9b5d500e2b567da3","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1338740706,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1338740706,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_37007e5569834d199761bc11fb62f57a"}},"3f8b6c2103d145f98d816e791e246bf6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_6d0e447c0a74482db053c547af9f4b8f","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1.34G/1.34G [00:32&lt;00:00, 41.4MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_22e51fce9985487c9c3a924730c5218a"}},"f9a9ad33922a435f9b5d500e2b567da3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"37007e5569834d199761bc11fb62f57a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6d0e447c0a74482db053c547af9f4b8f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"22e51fce9985487c9c3a924730c5218a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f7ae3cf2ea7c4b6c8b182e0fbafe98f4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_c480b9f4ffda4b359ddeec9c24c57608","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_8c0064db38e844729b6e365437346126","IPY_MODEL_397db14172a943d7b2524ccd27ca3974"]}},"c480b9f4ffda4b359ddeec9c24c57608":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"8c0064db38e844729b6e365437346126":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_eecf3e1781e647b6abc64818d14d847f","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":213450,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":213450,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5d68ccc5f8ec482d8eb2802e42523f82"}},"397db14172a943d7b2524ccd27ca3974":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_bab451c030ae42aeb7486e9b176181c3","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 213k/213k [00:00&lt;00:00, 1.36MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_16cc670e8e98497fb7f0ed8f85686c44"}},"eecf3e1781e647b6abc64818d14d847f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"5d68ccc5f8ec482d8eb2802e42523f82":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bab451c030ae42aeb7486e9b176181c3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"16cc670e8e98497fb7f0ed8f85686c44":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"547c040976624232b387c10801efc150":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_210b75380ead497d9dc728d220174332","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_9b2337727f0c4245993254e8fb4ba5e9","IPY_MODEL_7cdef2777fdb4dea90f0210cbc5b8f42"]}},"210b75380ead497d9dc728d220174332":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9b2337727f0c4245993254e8fb4ba5e9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_f39f0605cb8744cc8c9a0ad81b99fc68","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":435797,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":435797,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0037ae8c521a4c5fbebe514fe8c4e708"}},"7cdef2777fdb4dea90f0210cbc5b8f42":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_fd0c1c1e0baf46b4863f3e5b10f96cd0","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 436k/436k [00:42&lt;00:00, 10.3kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_240b34311aa34ed9aef5ec21474a2112"}},"f39f0605cb8744cc8c9a0ad81b99fc68":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"0037ae8c521a4c5fbebe514fe8c4e708":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"fd0c1c1e0baf46b4863f3e5b10f96cd0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"240b34311aa34ed9aef5ec21474a2112":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ef2a3f28e0934261881efa1673693495":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_ee7514a8696c441d91c29437b00d6196","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_bf8e8823801447aeb1e2f7f728c11918","IPY_MODEL_9625402082424614a24ed8c220f10ca8"]}},"ee7514a8696c441d91c29437b00d6196":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bf8e8823801447aeb1e2f7f728c11918":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_7ddabb58a023441bb52d84bf508b57a7","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":29,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":29,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_742e8c3e9a254d6e90c8aa33d106824a"}},"9625402082424614a24ed8c220f10ca8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_173c2b75c8574b34b364039f74e3c866","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 29.0/29.0 [00:17&lt;00:00, 1.62B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ce9d136c8fa54f4fbc6723cd85fadbf4"}},"7ddabb58a023441bb52d84bf508b57a7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"742e8c3e9a254d6e90c8aa33d106824a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"173c2b75c8574b34b364039f74e3c866":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"ce9d136c8fa54f4fbc6723cd85fadbf4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"OFOTiqrtNvyy"},"source":["# Install Transformers Library"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9avBl-0pP_1w","executionInfo":{"status":"ok","timestamp":1626804925871,"user_tz":-330,"elapsed":451,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"e4b066d0-dab1-4592-bfd4-9b95a2daeb4d"},"source":["!nvidia-smi"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Tue Jul 20 18:15:26 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   36C    P8     9W /  70W |      0MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7sYuExU3YiR4","executionInfo":{"status":"ok","timestamp":1626806171460,"user_tz":-330,"elapsed":19605,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"2be80e72-fc3f-4fc4-d989-7737593f44ee"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1hkhc10wNrGt","executionInfo":{"status":"ok","timestamp":1626689544329,"user_tz":-330,"elapsed":5957,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"aca1de22-2cfc-43f6-ebdc-ccbd25f9aa18"},"source":["!pip install transformers"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/fd/1a/41c644c963249fd7f3836d926afa1e3f1cc234a1c40d80c5f03ad8f6f1b2/transformers-4.8.2-py3-none-any.whl (2.5MB)\n","\r\u001b[K     |▏                               | 10kB 20.5MB/s eta 0:00:01\r\u001b[K     |▎                               | 20kB 25.3MB/s eta 0:00:01\r\u001b[K     |▍                               | 30kB 27.4MB/s eta 0:00:01\r\u001b[K     |▌                               | 40kB 30.0MB/s eta 0:00:01\r\u001b[K     |▋                               | 51kB 33.1MB/s eta 0:00:01\r\u001b[K     |▉                               | 61kB 33.2MB/s eta 0:00:01\r\u001b[K     |█                               | 71kB 32.8MB/s eta 0:00:01\r\u001b[K     |█                               | 81kB 32.5MB/s eta 0:00:01\r\u001b[K     |█▏                              | 92kB 32.8MB/s eta 0:00:01\r\u001b[K     |█▎                              | 102kB 32.8MB/s eta 0:00:01\r\u001b[K     |█▍                              | 112kB 32.8MB/s eta 0:00:01\r\u001b[K     |█▋                              | 122kB 32.8MB/s eta 0:00:01\r\u001b[K     |█▊                              | 133kB 32.8MB/s eta 0:00:01\r\u001b[K     |█▉                              | 143kB 32.8MB/s eta 0:00:01\r\u001b[K     |██                              | 153kB 32.8MB/s eta 0:00:01\r\u001b[K     |██                              | 163kB 32.8MB/s eta 0:00:01\r\u001b[K     |██▎                             | 174kB 32.8MB/s eta 0:00:01\r\u001b[K     |██▍                             | 184kB 32.8MB/s eta 0:00:01\r\u001b[K     |██▌                             | 194kB 32.8MB/s eta 0:00:01\r\u001b[K     |██▋                             | 204kB 32.8MB/s eta 0:00:01\r\u001b[K     |██▊                             | 215kB 32.8MB/s eta 0:00:01\r\u001b[K     |██▉                             | 225kB 32.8MB/s eta 0:00:01\r\u001b[K     |███                             | 235kB 32.8MB/s eta 0:00:01\r\u001b[K     |███▏                            | 245kB 32.8MB/s eta 0:00:01\r\u001b[K     |███▎                            | 256kB 32.8MB/s eta 0:00:01\r\u001b[K     |███▍                            | 266kB 32.8MB/s eta 0:00:01\r\u001b[K     |███▌                            | 276kB 32.8MB/s eta 0:00:01\r\u001b[K     |███▊                            | 286kB 32.8MB/s eta 0:00:01\r\u001b[K     |███▉                            | 296kB 32.8MB/s eta 0:00:01\r\u001b[K     |████                            | 307kB 32.8MB/s eta 0:00:01\r\u001b[K     |████                            | 317kB 32.8MB/s eta 0:00:01\r\u001b[K     |████▏                           | 327kB 32.8MB/s eta 0:00:01\r\u001b[K     |████▎                           | 337kB 32.8MB/s eta 0:00:01\r\u001b[K     |████▌                           | 348kB 32.8MB/s eta 0:00:01\r\u001b[K     |████▋                           | 358kB 32.8MB/s eta 0:00:01\r\u001b[K     |████▊                           | 368kB 32.8MB/s eta 0:00:01\r\u001b[K     |████▉                           | 378kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████                           | 389kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████▏                          | 399kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████▎                          | 409kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 419kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 430kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 440kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 450kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████                          | 460kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████                          | 471kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████▏                         | 481kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████▎                         | 491kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 501kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 512kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████▊                         | 522kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 532kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████                         | 542kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████                         | 552kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████▏                        | 563kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████▍                        | 573kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████▌                        | 583kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 593kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 604kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████▉                        | 614kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████                        | 624kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 634kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████▎                       | 645kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 655kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████▌                       | 665kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 675kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 686kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████                       | 696kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████                       | 706kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 716kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████▎                      | 727kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 737kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████▋                      | 747kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████▊                      | 757kB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 768kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████                      | 778kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████                      | 788kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 798kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 808kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████▌                     | 819kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████▋                     | 829kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████▊                     | 839kB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 849kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████                     | 860kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 870kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████▎                    | 880kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 890kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 901kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 911kB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 921kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████                    | 931kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████                    | 942kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████▏                   | 952kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 962kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 972kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████▋                   | 983kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 993kB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████▉                   | 1.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 1.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 1.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████▎                  | 1.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 1.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████▌                  | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████▊                  | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████▏                 | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████▎                 | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████▊                 | 1.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████▌                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████▋                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████▊                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████                | 1.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████▏               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████▋               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████▏              | 1.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████▋              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████▉              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████▎             | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████▌             | 1.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████▊             | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████▏            | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████▍            | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 1.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████▏           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████▌           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████▋           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 1.6MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████▎          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████▋          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████▊          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▏         | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 1.7MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▌         | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████▌        | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 1.8MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████▊        | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████▉        | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▍       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▋       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▉       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 1.9MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▏      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▋      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▊      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 2.0MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▋     | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▏    | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▍    | 2.1MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▌    | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▋    | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▌   | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▊   | 2.2MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▉   | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▎  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▍  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▋  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 2.3MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▏ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▎ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▌ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▏| 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▍| 2.4MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 2.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▋| 2.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 2.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▉| 2.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 2.5MB 32.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 2.5MB 32.8MB/s \n","\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers) (21.0)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.19.5)\n","Collecting huggingface-hub==0.0.12\n","  Downloading https://files.pythonhosted.org/packages/2f/ee/97e253668fda9b17e968b3f97b2f8e53aa0127e8807d24a547687423fe0b/huggingface_hub-0.0.12-py3-none-any.whl\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.0.12)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from transformers) (3.13)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2019.12.20)\n","Collecting tokenizers<0.11,>=0.10.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d4/e2/df3543e8ffdab68f5acc73f613de9c2b155ac47f162e725dcac87c521c11/tokenizers-0.10.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (3.3MB)\n","\u001b[K     |████████████████████████████████| 3.3MB 56.0MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from transformers) (4.6.1)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.41.1)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/75/ee/67241dc87f266093c533a2d4d3d69438e57d7a90abb216fa076e7d475d4a/sacremoses-0.0.45-py3-none-any.whl (895kB)\n","\u001b[K     |████████████████████████████████| 901kB 51.9MB/s \n","\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers) (2.4.7)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from huggingface-hub==0.0.12->transformers) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers) (3.5.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (1.15.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (1.0.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers) (7.1.2)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Installing collected packages: huggingface-hub, tokenizers, sacremoses, transformers\n","Successfully installed huggingface-hub-0.0.12 sacremoses-0.0.45 tokenizers-0.10.3 transformers-4.8.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"x4giRzM7NtHJ"},"source":["import numpy as np\n","import pandas as pd\n","import torch\n","import torch.nn as nn\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","import transformers\n","from transformers import AutoModel, BertTokenizerFast,BertTokenizer\n","\n","# specify GPU\n","device = torch.device(\"cuda\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kKd-Tj3hOMsZ"},"source":["# Load Dataset"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"cwJrQFQgN_BE","executionInfo":{"status":"ok","timestamp":1626806677767,"user_tz":-330,"elapsed":2142,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"398794b6-f8d4-4078-cf24-a914bc58a65d"},"source":["df1 = pd.read_json('/content/drive/MyDrive/sarcasm detection/Datasets/twitter/sarcasm_detection_shared_task_twitter_testing.jsonl',lines=True)\n","df = pd.read_json('/content/drive/MyDrive/sarcasm detection/Datasets/twitter/sarcasm_detection_shared_task_twitter_training.jsonl',lines=True)\n","\n","df['labels'] = df['label'].apply(lambda x: ['SARCASM', 'NOT_SARCASM'].index(x))\n","df1['labels'] = df1['label'].apply(lambda x: ['SARCASM', 'NOT_SARCASM'].index(x))\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>response</th>\n","      <th>context</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER @USER I don't get this .. obviousl...</td>\n","      <td>[A minor child deserves privacy and should be ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER trying to protest about . Talking ...</td>\n","      <td>[@USER @USER Why is he a loser ? He's just a P...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER @USER He makes an insane about of ...</td>\n","      <td>[Donald J . Trump is guilty as charged . The e...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER Meanwhile Trump won't even release...</td>\n","      <td>[Jamie Raskin tanked Doug Collins . Collins lo...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER Pretty Sure the Anti-Lincoln Crowd...</td>\n","      <td>[Man ... y ’ all gone “ both sides ” the apoca...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     label  ... labels\n","0  SARCASM  ...      0\n","1  SARCASM  ...      0\n","2  SARCASM  ...      0\n","3  SARCASM  ...      0\n","4  SARCASM  ...      0\n","\n","[5 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KK8JMEOMQ1zp","executionInfo":{"status":"ok","timestamp":1626689605089,"user_tz":-330,"elapsed":5263,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"079c26c0-7244-446f-9c3c-6280829910ee"},"source":["import pandas as pd\n","import re\n","import nltk\n","from nltk.stem import WordNetLemmatizer\n","from nltk.tokenize import RegexpTokenizer\n","from nltk.corpus import stopwords\n","import re\n","import string\n","import numpy as np\n","from nltk.corpus import stopwords\n","from nltk.stem import PorterStemmer\n","from nltk.tokenize import TweetTokenizer\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from tqdm.auto import tqdm\n","!pip install demoji\n","!pip install contractions\n","import demoji\n","import contractions\n","\n","demoji.download_codes()\n","nltk.download('stopwords') \n","# nltk.download('wordnet')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: demoji in /usr/local/lib/python3.7/dist-packages (0.4.0)\n","Requirement already satisfied: requests<3.0.0 in /usr/local/lib/python3.7/dist-packages (from demoji) (2.23.0)\n","Requirement already satisfied: colorama in /usr/local/lib/python3.7/dist-packages (from demoji) (0.4.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0->demoji) (2021.5.30)\n","Requirement already satisfied: contractions in /usr/local/lib/python3.7/dist-packages (0.0.52)\n","Requirement already satisfied: textsearch>=0.0.21 in /usr/local/lib/python3.7/dist-packages (from contractions) (0.0.21)\n","Requirement already satisfied: anyascii in /usr/local/lib/python3.7/dist-packages (from textsearch>=0.0.21->contractions) (0.2.0)\n","Requirement already satisfied: pyahocorasick in /usr/local/lib/python3.7/dist-packages (from textsearch>=0.0.21->contractions) (1.4.2)\n","Downloading emoji data ...\n","... OK (Got response in 0.13 seconds)\n","Writing emoji data to /root/.demoji/codes.json ...\n","... OK\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"Zu0hg_79P0uV"},"source":["def preprocess_text(text):\n","    # Tokenise words while ignoring punctuation(https://www.nltk.org/_modules/nltk/tokenize/regexp.html)\n","    text = re.sub(r\"@\",'', text)\n","    text = re.sub(r'\\b(\\w+)( \\1\\b)+', r'\\1', text)\n","    text = re.sub(r\"USER\",'@USER', text)\n","    text = re.sub(r'<URL>','',text)\n","\n","    text = demoji.replace_with_desc(text)\n","    text = re.sub(r':','',text)\n","    text = contractions.fix(text)\n","    # text = re.sub(r'\\.+','',text)\n","    return text\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5q3DijFeQiTD","executionInfo":{"status":"ok","timestamp":1626689616435,"user_tz":-330,"elapsed":11,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"af19f9fb-658f-4f06-e4bc-3c786d6a8ef4"},"source":["for i in range(5):\n","  print(df['response'][i])\n","  print(preprocess_text(df['response'][i]))\n","  # print(preprocess_text2(df['response'][i]))\n","  print()\n","  # print(df['context_resp'][i])\n","  # print(preprocess_text(df['context_resp'][i]))\n","  # print(preprocess_text2(df['context_resp'][i]))\n","  # print()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["@USER @USER @USER I don't get this .. obviously you do care or you would've moved right along .. instead you decided to care and troll her ..\n","@USER I do not get this .. obviously you do care or you would have moved right along .. instead you decided to care and troll her ..\n","\n","@USER @USER trying to protest about . Talking about him and his labels and they label themselves WTF does that make em ?\n","@USER trying to protest about . Talking about him and his labels and they label themselves WTF does that make them ?\n","\n","@USER @USER @USER He makes an insane about of money from the MOVIES , Einstein ! #LearnHowTheSystemWorks\n","@USER He makes an insane about of money from the MOVIES , Einstein ! #LearnHowTheSystemWorks\n","\n","@USER @USER Meanwhile Trump won't even release his SAT scores and his Wharton professors said he was the dumbest student they've ever taught\n","@USER Meanwhile Trump will not even release his SAT scores and his Wharton professors said he was the dumbest student they have ever taught\n","\n","@USER @USER Pretty Sure the Anti-Lincoln Crowd Claimed That \" Democracy Was on the Ballot \" in 1860 , too . They Thought Lincoln Was \" Authoritarian \" . #GOP #PartyOfLincoln #Democrats\n","@USER Pretty Sure the Anti-Lincoln Crowd Claimed That \" Democracy Was on the Ballot \" in 1860 , too . They Thought Lincoln Was \" Authoritarian \" . #GOP #PartyOfLincoln #Democrats\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Q4U6o9cRP5dR"},"source":["def fun(A,l):\n","  if len(A)<=l:\n","    return A\n","  else:\n","    # return A[-l::1]\n","    return A[-1:-l-1:-1]\n","def fun1(A):\n","  return ''.join(A)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RgDynTEzXs0n"},"source":["# for i in range(5000):\n","#   if len(''.join(df.loc[i,'context_e'][-2:]).split())>80:\n","#     l=1\n","#   else:\n","#     l=2\n","#   df.loc[i,'context_f']=fun1(fun(df.loc[i,'context_e'],l))\n","\n","# for i in range(1800):\n","#   if len(''.join(df1.loc[i,'context_e'][-2:]).split())>80:\n","#     l=1\n","#   else:\n","#     l=2\n","#   df1.loc[i,'context_f']=fun1(fun(df1.loc[i,'context_e'],l))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U7WBye79ZKoO"},"source":["l=0\n","# df[f\"context_{l}\"]=df['context_e'].apply(fun,args=[l]).apply(fun1)\n","# df1[f\"context_{l}\"]=df1['context_e'].apply(fun,args=[l]).apply(fun1)\n","\n","# df['tweets']=df['context'].apply(fun,args=[l]).apply(fun1)\n","# df1['tweets']=df1['context'].apply(fun,args=[l]).apply(fun1)\n","# df['tweets']=df['tweets']+'reply-'+ df['response']\n","# df1['tweets']=df1['tweets']+'reply-'+ df1['response']\n","\n","\n","# df['tweets']= df['response'] +'reply-'+ df['context'].apply(fun,args=[l]).apply(fun1)\n","# df1['tweets']=df1['response'] +'reply-'+ df1['context'].apply(fun,args=[l]).apply(fun1)\n","df['tweets']= df['context'].apply(fun,args=[l]).apply(fun1) + df['response']\n","df1['tweets']= df1['context'].apply(fun,args=[l]).apply(fun1) + df1['response']\n","\n","df['tweets']= df['tweets'].apply(preprocess_text)\n","df1['tweets']=df1['tweets'].apply(preprocess_text)\n","# df['tweets']=df['tweets']+'reply-'+ df['response'].apply(preprocess_text)\n","# df1['tweets']=df1['tweets']+'reply-'+ df1['response'].apply(preprocess_text)\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"676DPU1BOPdp","executionInfo":{"status":"ok","timestamp":1626689718829,"user_tz":-330,"elapsed":592,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"3a62d8f8-56d6-4079-e498-d55c805ce164"},"source":["# check class distribution\n","df['labels'].value_counts(normalize = True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    0.5\n","0    0.5\n","Name: labels, dtype: float64"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"mjLmL_LFtVjo","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1626689719250,"user_tz":-330,"elapsed":13,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"52e1237b-369a-4d7e-e3d4-b19a5545d4ed"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>response</th>\n","      <th>context</th>\n","      <th>labels</th>\n","      <th>tweets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER @USER I don't get this .. obviousl...</td>\n","      <td>[A minor child deserves privacy and should be ...</td>\n","      <td>0</td>\n","      <td>@USER I do not get this .. obviously you do ca...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER trying to protest about . Talking ...</td>\n","      <td>[@USER @USER Why is he a loser ? He's just a P...</td>\n","      <td>0</td>\n","      <td>@USER trying to protest about . Talking about ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER @USER He makes an insane about of ...</td>\n","      <td>[Donald J . Trump is guilty as charged . The e...</td>\n","      <td>0</td>\n","      <td>@USER He makes an insane about of money from t...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER Meanwhile Trump won't even release...</td>\n","      <td>[Jamie Raskin tanked Doug Collins . Collins lo...</td>\n","      <td>0</td>\n","      <td>@USER Meanwhile Trump will not even release hi...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SARCASM</td>\n","      <td>@USER @USER Pretty Sure the Anti-Lincoln Crowd...</td>\n","      <td>[Man ... y ’ all gone “ both sides ” the apoca...</td>\n","      <td>0</td>\n","      <td>@USER Pretty Sure the Anti-Lincoln Crowd Claim...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     label  ...                                             tweets\n","0  SARCASM  ...  @USER I do not get this .. obviously you do ca...\n","1  SARCASM  ...  @USER trying to protest about . Talking about ...\n","2  SARCASM  ...  @USER He makes an insane about of money from t...\n","3  SARCASM  ...  @USER Meanwhile Trump will not even release hi...\n","4  SARCASM  ...  @USER Pretty Sure the Anti-Lincoln Crowd Claim...\n","\n","[5 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"Zc02m5VBfqOk","executionInfo":{"status":"ok","timestamp":1624956306715,"user_tz":-330,"elapsed":14,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"2eba671c-c881-4944-dcfb-5a98fd965c6b"},"source":["df['tweets'][1168]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["' The FBI , CIA and NSA all know it which is why they are trying to protect democracy by exposing you . These are career professionals that have worked for both Republican and Democratic Presidents . They know you are compromised .reply-   There is a huge difference between the words \" no \" and \" know \" .'"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"6PfWtGujXdpi","executionInfo":{"status":"ok","timestamp":1624862958512,"user_tz":-330,"elapsed":7,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"d7f64d3a-73f7-4ff2-ae6a-0d3b63015713"},"source":["# df['context'][1168]\n","# df['context_2'][1168]\n","df['tweets'][1168]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["' The FBI , CIA and NSA all know it which is why they are trying to protect democracy by exposing you . These are career professionals that have worked for both Republican and Democratic Presidents . They know u are compromised .reply-   There is a huge difference between the words \" no \" and \" know \" .'"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"HH1yATbZXoI-","executionInfo":{"status":"ok","timestamp":1624951509656,"user_tz":-330,"elapsed":441,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"098094e4-907e-4e66-a81b-cf8e66b8cb37"},"source":["df['response'][1168]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'@USER @USER @USER There is a huge difference between the words \" no \" and \" know \" .'"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"MKfWnApvOoE7"},"source":["# Split train dataset into train, validation and test sets"]},{"cell_type":"code","metadata":{"id":"mfhSPF5jOWb7"},"source":["\n","X_s = df['tweets'].values\n","y_s = df['labels'].values\n","\n","Xt_s =df1[\"tweets\"].values\n","yt_s = df1['labels'].values\n","\n","train_text, temp_text, train_labels, temp_labels = X_s,Xt_s,y_s,yt_s\n","\n","# we will use temp_text and temp_labels to create validation and test set\n","val_text, test_text, val_labels, test_labels = train_test_split(temp_text, temp_labels, \n","                                                                random_state=2018, \n","                                                                test_size=0.5, \n","                                                                stratify=temp_labels)\n","val_text, test_text, val_labels, test_labels=temp_text, temp_text, temp_labels, temp_labels\n","\n","# X_train, X_test, y_train, y_test = train_test_split(X_s, y_s, test_size=0.2, random_state=42)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"W1jEFb39cCjk"},"source":["# pip install -U sentence-transformers"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n7hsdLoCO7uB"},"source":["# Import BERT Model and BERT Tokenizer\n","\n","---\n","\n","\n","\n","---\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331,"referenced_widgets":["6f76dabeee284d0b981b0f98714d6181","691739b7c6b647ceaa1512d91650b792","178b325d939d4e288c95473e48a4e51f","e9bb09145c054709b8ddb9ac5c84adb8","bab8af2dc9714c6ca228cb71632679e1","6713399bec52464886c7fbab46251cf1","295c5fca536144ef9c79f0687653c1fd","0c63d46e125f40dabae4e53f95cda3b9","5d429e03aad548a29810538a929c3091","5590f2853824472f899a2ec8ce66a7a5","86e40945682b4768a4ed1c126cd3560f","3f8b6c2103d145f98d816e791e246bf6","f9a9ad33922a435f9b5d500e2b567da3","37007e5569834d199761bc11fb62f57a","6d0e447c0a74482db053c547af9f4b8f","22e51fce9985487c9c3a924730c5218a","f7ae3cf2ea7c4b6c8b182e0fbafe98f4","c480b9f4ffda4b359ddeec9c24c57608","8c0064db38e844729b6e365437346126","397db14172a943d7b2524ccd27ca3974","eecf3e1781e647b6abc64818d14d847f","5d68ccc5f8ec482d8eb2802e42523f82","bab451c030ae42aeb7486e9b176181c3","16cc670e8e98497fb7f0ed8f85686c44","547c040976624232b387c10801efc150","210b75380ead497d9dc728d220174332","9b2337727f0c4245993254e8fb4ba5e9","7cdef2777fdb4dea90f0210cbc5b8f42","f39f0605cb8744cc8c9a0ad81b99fc68","0037ae8c521a4c5fbebe514fe8c4e708","fd0c1c1e0baf46b4863f3e5b10f96cd0","240b34311aa34ed9aef5ec21474a2112","ef2a3f28e0934261881efa1673693495","ee7514a8696c441d91c29437b00d6196","bf8e8823801447aeb1e2f7f728c11918","9625402082424614a24ed8c220f10ca8","7ddabb58a023441bb52d84bf508b57a7","742e8c3e9a254d6e90c8aa33d106824a","173c2b75c8574b34b364039f74e3c866","ce9d136c8fa54f4fbc6723cd85fadbf4"]},"id":"S1kY3gZjO2RE","executionInfo":{"status":"ok","timestamp":1626689807371,"user_tz":-330,"elapsed":37697,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"fb6db6c7-c9be-4f13-ffed-6e0ca06bae09"},"source":["# import BERT-base pretrained model\n","# bert = AutoModel.from_pretrained('bert-base-uncased')\n","# # Load the BERT tokenizer\n","# tokenizer = BertTokenizerFast.from_pretrained('bert-base-uncased')\n","\n","# import BERT-base pretrained model\n","bert = AutoModel.from_pretrained('bert-large-cased')\n","# Load the BERT tokenizer\n","tokenizer = BertTokenizerFast.from_pretrained('bert-large-cased')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6f76dabeee284d0b981b0f98714d6181","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=762.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5d429e03aad548a29810538a929c3091","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=1338740706.0, style=ProgressStyle(descr…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["Some weights of the model checkpoint at bert-large-cased were not used when initializing BertModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.decoder.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.bias', 'cls.seq_relationship.weight', 'cls.seq_relationship.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.bias']\n","- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n"],"name":"stderr"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f7ae3cf2ea7c4b6c8b182e0fbafe98f4","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=213450.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"547c040976624232b387c10801efc150","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=435797.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ef2a3f28e0934261881efa1673693495","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=29.0, style=ProgressStyle(description_w…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_zOKeOMeO-DT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626689807371,"user_tz":-330,"elapsed":12,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"e4cc3a52-b868-40d9-a318-8b25d2b34847"},"source":["# sample data\n","text = [\"this is a bert model tutorial\", \"we will fine-tune a bert model\"]\n","# encode text\n","sent_id = tokenizer.batch_encode_plus(text, padding=True,return_token_type_ids=False)\n","\n","# output\n","print(sent_id)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'input_ids': [[101, 1142, 1110, 170, 1129, 3740, 2235, 17463, 2916, 102, 0], [101, 1195, 1209, 2503, 118, 9253, 170, 1129, 3740, 2235, 102]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"8wIYaWI_Prg8"},"source":["# Tokenization"]},{"cell_type":"code","metadata":{"id":"yKwbpeN_PMiu"},"source":["# get length of all the messages in the train set\n","# seq_len = [len(i) for i in train_text]\n","\n","# pd.Series(seq_len).hist(bins = 30)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xv4HoyOa3nVw","executionInfo":{"status":"ok","timestamp":1626689807372,"user_tz":-330,"elapsed":8,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"21b55115-0aca-4842-cac6-f7c533fd9e74"},"source":["total=0\n","for i in range(5000):\n","  total+=len(df['tweets'][i].split(' '))\n","total/5000"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["27.335"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"OXcswEIRPvGe"},"source":["max_seq_len = 100"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tk5S7DWaP2t6"},"source":["# tokenize and encode sequences in the training set\n","tokens_train = tokenizer.batch_encode_plus(\n","    train_text.tolist(),\n","    max_length = max_seq_len,\n","    padding=True,\n","    truncation=True,\n","    return_token_type_ids=False\n",")\n","\n","# tokenize and encode sequences in the validation set\n","tokens_val = tokenizer.batch_encode_plus(\n","    val_text.tolist(),\n","    max_length = max_seq_len,\n","    padding=True,\n","    truncation=True,\n","    return_token_type_ids=False\n",")\n","\n","# tokenize and encode sequences in the test set\n","tokens_test = tokenizer.batch_encode_plus(\n","    test_text.tolist(),\n","    max_length = max_seq_len,\n","    padding=True,\n","    truncation=True,\n","    return_token_type_ids=False\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q0eZIy43FCCE","executionInfo":{"status":"ok","timestamp":1626689854443,"user_tz":-330,"elapsed":505,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"9840f1be-735a-4613-f22e-2f7315caf8c0"},"source":["count=0\n","maxi=0\n","for i in range(5000):\n","  maxi=max(maxi,len(train_text[i].split()))\n","  if len(train_text[i].split())>200:\n","    count+=1\n","    print(i,df['tweets'][i])\n","    # break\n","# count\n","maxi"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["77"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U-n-AQufFLtW","executionInfo":{"status":"ok","timestamp":1624956609955,"user_tz":-330,"elapsed":12,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"a7815063-f316-49e7-aa10-6c91ea4dd818"},"source":["for i in range(5000):\n","  if len(train_text[i].split())>200:\n","    print(i,tokens_train.data['input_ids'][i])\n","    # break"],"execution_count":null,"outputs":[{"output_type":"stream","text":["4264 [101, 2009, 1521, 1055, 1037, 26316, 2186, 999, 999, 2007, 2180, 3207, 3993, 1010, 6429, 1010, 6057, 2111, 999, 999, 1998, 3494, 999, 999, 5629, 2227, 2007, 8072, 2227, 2007, 4000, 1997, 6569, 2009, 1521, 1055, 3065, 2149, 2000, 2196, 2644, 3554, 21321, 1998, 9147, 1998, 20489, 999, 999, 2000, 3233, 2039, 2114, 5223, 999, 999, 1998, 2008, 2057, 2031, 1037, 5368, 2000, 2689, 2008, 2065, 2057, 2156, 2009, 999, 999, 2000, 2196, 3233, 2145, 2065, 2619, 2003, 2108, 3480, 999, 999, 1998, 2000, 2196, 2507, 2039, 999, 999, 1998, 2467, 3233, 2039, 999, 999, 1998, 2031, 3246, 999, 999, 2039, 2265, 2149, 2008, 2007, 1037, 2843, 1997, 15398, 999, 999, 26452, 999, 999, 16056, 999, 999, 1998, 2293, 999, 999, 4385, 1012, 1012, 1012, 999, 999, 2057, 2035, 10107, 2000, 2175, 2000, 1996, 2204, 2173, 999, 999, 5629, 2227, 2007, 17201, 16784, 2039, 2601, 3096, 4309, 999, 999, 2540, 11446, 3521, 6454, 7514, 1011, 2008, 2296, 2111, 2064, 2689, 999, 999, 1998, 2000, 2507, 2070, 2111, 1037, 2117, 3382, 999, 999, 1998, 1996, 3382, 1997, 18434, 999, 999, 2008, 2045, 2003, 2204, 1999, 7955, 999, 999, 1998, 2008, 3071, 2064, 2022, 999, 999, 2009, 6570, 2149, 2000, 2903, 1999, 2242, 2204, 999, 999, 1999, 2111, 999, 999, 1999, 4426, 999, 999, 2227, 11221, 1037, 3610, 12015, 2192, 5396, 1011, 2601, 3096, 4309, 2330, 2398, 2601, 3096, 4309, 102, 0]\n","4567 [101, 2000, 2196, 3233, 2145, 2065, 2619, 2003, 2108, 3480, 999, 999, 1998, 2000, 2196, 2507, 2039, 999, 999, 1998, 2467, 3233, 2039, 999, 999, 1998, 2031, 3246, 999, 999, 2039, 2265, 2149, 2008, 2007, 1037, 2843, 1997, 15398, 999, 999, 26452, 999, 999, 16056, 999, 999, 1998, 2293, 999, 999, 4385, 1012, 1012, 1012, 999, 999, 2057, 2035, 10107, 2000, 2175, 2000, 1996, 2204, 2173, 999, 999, 5629, 2227, 2007, 17201, 16784, 2039, 2601, 3096, 4309, 999, 999, 2540, 11446, 3521, 6454, 2008, 2296, 2111, 2064, 2689, 999, 999, 1998, 2000, 2507, 2070, 2111, 1037, 2117, 3382, 999, 999, 1998, 1996, 3382, 1997, 18434, 999, 999, 2008, 2045, 2003, 2204, 1999, 7955, 999, 999, 1998, 2008, 3071, 2064, 2022, 999, 999, 2009, 6570, 2149, 2000, 2903, 1999, 2242, 2204, 999, 999, 1999, 2111, 999, 999, 1999, 4426, 999, 999, 2227, 11221, 1037, 3610, 12015, 2192, 5396, 1011, 2601, 3096, 4309, 2330, 2398, 2601, 3096, 4309, 7514, 1011, 1045, 2064, 1521, 1056, 2903, 2008, 2003, 4566, 999, 999, 2007, 1996, 2161, 1018, 999, 999, 9928, 6933, 2227, 6933, 2227, 2064, 1521, 1056, 3524, 2005, 2254, 2184, 999, 6229, 1996, 2265, 3310, 2067, 999, 999, 4826, 999, 999, 5629, 2227, 2007, 8072, 5629, 2227, 2007, 2540, 1011, 2159, 2732, 1011, 4930, 1001, 1996, 24146, 24759, 10732, 17310, 3385, 2549, 1001, 1996, 24146, 24759, 10732, 8523, 3215, 5243, 3385, 2036, 2064, 102]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4C4Bm76CtnrA","executionInfo":{"status":"ok","timestamp":1624954342498,"user_tz":-330,"elapsed":15,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"f2fed198-f06f-4446-a013-403c1b50b5c2"},"source":["print(train_text[0])\n","print(tokens_train.data['input_ids'][0])\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" If your child is not named Barron ... #BeBest Melania could not care less . Fact . hundred pointsreply-   I do not get this .. obviously you do care or you would have moved right along .. instead you decided to care and troll her ..\n","[101, 1409, 1240, 2027, 1110, 1136, 1417, 26901, 119, 119, 119, 108, 4108, 2064, 2556, 11637, 11262, 1180, 1136, 1920, 1750, 119, 143, 11179, 119, 2937, 1827, 1874, 1643, 1193, 118, 146, 1202, 1136, 1243, 1142, 119, 119, 5544, 1128, 1202, 1920, 1137, 1128, 1156, 1138, 1427, 1268, 1373, 119, 119, 1939, 1128, 1879, 1106, 1920, 1105, 28000, 1123, 119, 119, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a1LnKlloIvFt","executionInfo":{"status":"ok","timestamp":1624863731172,"user_tz":-330,"elapsed":541,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"91017414-e6cc-48b8-9824-7807e3cfbb88"},"source":["print(tokenizer.get_vocab()[\"could\"])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1180\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BonoELhCyKL_"},"source":["# len(tokens_train.data['input_ids'][62])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Wsm8bkRZQTw9"},"source":["# Convert Integer Sequences to Tensors"]},{"cell_type":"code","metadata":{"id":"QR-lXwmzQPd6"},"source":["# for train set\n","train_seq = torch.tensor(tokens_train['input_ids'])\n","train_mask = torch.tensor(tokens_train['attention_mask'])\n","train_y = torch.tensor(train_labels.tolist())\n","\n","# for validation set\n","val_seq = torch.tensor(tokens_val['input_ids'])\n","val_mask = torch.tensor(tokens_val['attention_mask'])\n","val_y = torch.tensor(val_labels.tolist())\n","\n","# for test set\n","test_seq = torch.tensor(tokens_test['input_ids'])\n","test_mask = torch.tensor(tokens_test['attention_mask'])\n","test_y = torch.tensor(test_labels.tolist())"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ov1cOBlcRLuk"},"source":["# Create DataLoaders"]},{"cell_type":"code","metadata":{"id":"qUy9JKFYQYLp"},"source":["from torch.utils.data import TensorDataset, DataLoader, RandomSampler, SequentialSampler\n","\n","#define a batch size\n","batch_size = 32\n","# batch_size = 16\n","\n","# wrap tensors\n","train_data = TensorDataset(train_seq, train_mask, train_y)\n","\n","# sampler for sampling the data during training\n","train_sampler = RandomSampler(train_data)\n","\n","# dataLoader for train set\n","train_dataloader = DataLoader(train_data, sampler=train_sampler, batch_size=batch_size)\n","\n","# wrap tensors\n","val_data = TensorDataset(val_seq, val_mask, val_y)\n","\n","# sampler for sampling the data during training\n","val_sampler = SequentialSampler(val_data)\n","\n","# dataLoader for validation set\n","val_dataloader = DataLoader(val_data, sampler = val_sampler, batch_size=batch_size)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K2HZc5ZYRV28"},"source":["# Freeze BERT Parameters"]},{"cell_type":"code","metadata":{"id":"wHZ0MC00RQA_"},"source":["# freeze all the parameters\n","for param in bert.parameters():\n","    param.requires_grad = True\n","# print(bert)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"s7ahGBUWRi3X"},"source":["# Define Model Architecture"]},{"cell_type":"code","metadata":{"id":"b3iEtGyYRd0A"},"source":["class BERT_Arch(nn.Module):\n","\n","    def __init__(self, bert):\n","      \n","      super(BERT_Arch, self).__init__()\n","\n","      self.bert = bert \n","      \n","      # dropout layer\n","      self.dropout = nn.Dropout(0.1)\n","      \n","      # relu activation function\n","      self.relu =  nn.ReLU()\n","\n","      # dense layer 1\n","      # self.fc1 = nn.Linear(768,512)\n","      self.fc1 = nn.Linear(1024,512)\n","      \n","      # dense layer 2 (Output layer)\n","      self.fc2 = nn.Linear(512,2)\n","      # self.fc2 = nn.Linear(256,2)\n","\n","      #softmax activation function\n","      self.softmax = nn.LogSoftmax(dim=1)\n","\n","    #define the forward pass\n","    def forward(self, sent_id, mask):\n","\n","      #pass the inputs to the model  \n","      _, cls_hs = self.bert(sent_id,mask, return_dict=False)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn11111 \",cls_hs.shape)\n","      x = self.fc1(cls_hs)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      x = self.relu(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      x = self.dropout(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      # output layer\n","      x = self.fc2(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      # apply softmax activation\n","      x = self.softmax(x)\n","      # print(\"dfghjjhfchgbhlvmb jfbvfddvfgbhnjhgvcvtynubtrvcebnuexcvbnbtvrcedcvbnjbnjn22222 \",x.shape)\n","      return x"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cBAJJVuJRliv"},"source":["# pass the pre-trained BERT to our define architecture\n","model = BERT_Arch(bert)\n","\n","# push the model to GPU\n","model = model.to(device)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"taXS0IilRn9J"},"source":["# optimizer from hugging face transformers\n","from transformers import AdamW\n","\n","# define the optimizer\n","optimizer = AdamW(model.parameters(), lr = 2e-5)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LLpOJGnl3Yg8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626689898018,"user_tz":-330,"elapsed":7,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"4f04ae4d-c300-49ee-98f5-0cc3073b1d05"},"source":["!nvidia-smi"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mon Jul 19 10:18:17 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   40C    P0    27W /  70W |   2350MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"j9CDpoMQR_rK"},"source":["# Find Class Weights"]},{"cell_type":"code","metadata":{"id":"izY5xH5eR7Ur","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626689900945,"user_tz":-330,"elapsed":3,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"5e642689-fbe1-426e-d9d4-fca9057a2c24"},"source":["from sklearn.utils.class_weight import compute_class_weight\n","\n","#compute the class weights\n","class_wts = compute_class_weight('balanced', np.unique(train_labels), train_labels)\n","\n","print(class_wts)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1. 1.]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"r1WvfY2vSGKi"},"source":["# convert class weights to tensor\n","weights= torch.tensor(class_wts,dtype=torch.float)\n","weights = weights.to(device)\n","\n","# loss function\n","cross_entropy  = nn.NLLLoss(weight=weights) \n","\n","# number of training epochs\n","epochs = 10"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"My4CA0qaShLq"},"source":["# Fine-Tune BERT"]},{"cell_type":"code","metadata":{"id":"rskLk8R_SahS"},"source":["# function to train the model\n","def train():\n","  \n","  model.train()\n","\n","  total_loss, total_accuracy = 0, 0\n","  \n","  # empty list to save model predictions\n","  total_preds=[]\n","  \n","  # iterate over batches\n","  for step,batch in enumerate(train_dataloader):\n","    \n","    # progress update after every 50 batches.\n","    if step % 50 == 0 and not step == 0:\n","      print('  Batch {:>5,}  of  {:>5,}.'.format(step, len(train_dataloader)))\n","\n","    # push the batch to gpu\n","    batch = [r.to(device) for r in batch]\n"," \n","    sent_id, mask, labels = batch\n","\n","    # clear previously calculated gradients \n","    model.zero_grad()        \n","\n","    # get model predictions for the current batch\n","    preds = model(sent_id, mask)\n","\n","    # compute the loss between actual and predicted values\n","    loss = cross_entropy(preds, labels)\n","\n","    # add on to the total loss\n","    total_loss = total_loss + loss.item()\n","\n","    # backward pass to calculate the gradients\n","    loss.backward()\n","\n","    # clip the the gradients to 1.0. It helps in preventing the exploding gradient problem\n","    torch.nn.utils.clip_grad_norm_(model.parameters(), 1.0)\n","\n","    # update parameters\n","    optimizer.step()\n","\n","    # model predictions are stored on GPU. So, push it to CPU\n","    preds=preds.detach().cpu().numpy()\n","\n","    # append the model predictions\n","    total_preds.append(preds)\n","\n","  # compute the training loss of the epoch\n","  avg_loss = total_loss / len(train_dataloader)\n","  \n","  # predictions are in the form of (no. of batches, size of batch, no. of classes).\n","  # reshape the predictions in form of (number of samples, no. of classes)\n","  total_preds  = np.concatenate(total_preds, axis=0)\n","\n","  #returns the loss and predictions\n","  return avg_loss, total_preds"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yGXovFDlSxB5"},"source":["# function for evaluating the model\n","def evaluate():\n","  \n","  print(\"\\nEvaluating...\")\n","  \n","  # deactivate dropout layers\n","  model.eval()\n","\n","  total_loss, total_accuracy = 0, 0\n","  \n","  # empty list to save the model predictions\n","  total_preds = []\n","\n","  # iterate over batches\n","  for step,batch in enumerate(val_dataloader):\n","    \n","    # Progress update every 50 batches.\n","    if step % 50 == 0 and not step == 0:\n","      \n","      # Calculate elapsed time in minutes.\n","      # elapsed = format_time(time.time() - t0)\n","            \n","      # Report progress.\n","      print('  Batch {:>5,}  of  {:>5,}.'.format(step, len(val_dataloader)))\n","\n","    # push the batch to gpu\n","    batch = [t.to(device) for t in batch]\n","\n","    sent_id, mask, labels = batch\n","\n","    # deactivate autograd\n","    with torch.no_grad():\n","      \n","      # model predictions\n","      preds = model(sent_id, mask)\n","\n","      # compute the validation loss between actual and predicted values\n","      loss = cross_entropy(preds,labels)\n","\n","      total_loss = total_loss + loss.item()\n","\n","      preds = preds.detach().cpu().numpy()\n","\n","      total_preds.append(preds)\n","\n","  # compute the validation loss of the epoch\n","  avg_loss = total_loss / len(val_dataloader) \n","\n","  # reshape the predictions in form of (number of samples, no. of classes)\n","  total_preds  = np.concatenate(total_preds, axis=0)\n","\n","  return avg_loss, total_preds"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WHQlio6yM_QH"},"source":["from sklearn.metrics import accuracy_score, precision_recall_fscore_support"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9KZEgxRRTLXG"},"source":["# Start Model Training"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k1USGTntS3TS","executionInfo":{"status":"ok","timestamp":1626690237170,"user_tz":-330,"elapsed":324159,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"3e940b5e-434d-4f74-b58d-1b89240a3a83"},"source":["# set initial loss to infinite\n","best_valid_loss = float('inf')\n","\n","# empty lists to store training and validation loss of each epoch\n","train_losses=[]\n","valid_losses=[]\n","\n","#for each epoch\n","epochs=1\n","for epoch in range(epochs):\n","     \n","    print('\\n Epoch {:} / {:}'.format(epoch + 1, epochs))\n","    \n","    #train model\n","    train_loss,_ = train()\n","    \n","    #evaluate model\n","    valid_loss, _ = evaluate()\n","    \n","    #save the best model\n","    if valid_loss < best_valid_loss:\n","        best_valid_loss = valid_loss\n","        torch.save(model.state_dict(), 'saved_weights.pt')\n","    \n","    # append training and validation loss\n","    train_losses.append(train_loss)\n","    valid_losses.append(valid_loss)\n","\n","    # get predictions for test data\n","    !nvidia-smi\n","    # with torch.no_grad():\n","    #   preds = model(test_seq.to(device), test_mask.to(device))\n","    #   preds = preds.detach().cpu().numpy()\n","    # preds = np.argmax(preds, axis = 1)\n","    # print(classification_report(test_y, preds))\n","    # print(accuracy_score(test_y, preds))\n","    \n","    print(f'\\nTraining Loss: {train_loss:.3f}')\n","    print(f'Validation Loss: {valid_loss:.3f}')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\n"," Epoch 1 / 1\n","  Batch    50  of    157.\n","  Batch   100  of    157.\n","  Batch   150  of    157.\n","\n","Evaluating...\n","  Batch    50  of     57.\n","Mon Jul 19 10:23:56 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   73C    P0    33W /  70W |  13418MiB / 15109MiB |      1%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n","\n","Training Loss: 0.522\n","Validation Loss: 0.558\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Js41a32G4Law"},"source":["# import torch\n","# torch.cuda.empty_cache()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zpq8cPHW4Ohp"},"source":["# !nvidia-smi"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_yrhUc9kTI5a"},"source":["# Load Saved Model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OacxUyizS8d1","executionInfo":{"status":"ok","timestamp":1626690252191,"user_tz":-330,"elapsed":1106,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"6332a034-ec2b-417e-a73e-0ca552dd919e"},"source":["#load weights of best model\n","path = 'saved_weights.pt'\n","model.load_state_dict(torch.load(path))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"markdown","metadata":{"id":"x4SVftkkTZXA"},"source":["# Get Predictions for Test Data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NZl0SZmFTRQA","executionInfo":{"status":"ok","timestamp":1626690295289,"user_tz":-330,"elapsed":42043,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"67b64fce-c93b-4082-dae9-b94a7549492f"},"source":["pred=[]\n","with torch.no_grad():\n","  for i in range(0,180):\n","    preds = model(test_seq[i*10:i*10+10].to(device), test_mask[i*10:i*10+10].to(device))\n","    preds = preds.detach().cpu().numpy()\n","    pred.append(preds)\n","print(np.array(pred).shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(180, 10, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WfHQYSOAgLyT"},"source":["pred1=np.array(pred)\n","# pred1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fmSzWK63gL5z","executionInfo":{"status":"ok","timestamp":1626690295290,"user_tz":-330,"elapsed":26,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"24ad5df7-d306-498f-d06a-63815584d22d"},"source":["pred2=pred1.reshape((1800,2))\n","pred2.shape\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1800, 2)"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"id":"nQ_1m2WhgL7k"},"source":["p=pd.DataFrame(pred2)\n","p.to_csv('context2_resp.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d8su6xM8gSNJ","executionInfo":{"status":"ok","timestamp":1626690295291,"user_tz":-330,"elapsed":21,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"a3f1637b-ac17-4572-a70a-be525c5ef60b"},"source":["pred3 = np.argmax(pred2, axis = 1)\n","pred3"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 0, ..., 1, 1, 1])"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZMw2NRnngSQs","executionInfo":{"status":"ok","timestamp":1626690295292,"user_tz":-330,"elapsed":19,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"715ff97f-fd79-470f-a1a1-3b5703e721c1"},"source":["print(classification_report(test_y, pred3))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.67      0.85      0.75       900\n","           1       0.79      0.58      0.67       900\n","\n","    accuracy                           0.71      1800\n","   macro avg       0.73      0.71      0.71      1800\n","weighted avg       0.73      0.71      0.71      1800\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5K4dl1AQgShx","executionInfo":{"status":"ok","timestamp":1626690295293,"user_tz":-330,"elapsed":17,"user":{"displayName":"swapnil kumar","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj9vEVcpw4Md19MxYrt28Nw5e4xMxyCx3xoMPqseg=s64","userId":"09398363863484464628"}},"outputId":"b0132cb7-f12f-4fb1-84c0-f1eabf2b535d"},"source":["# confusion matrix\n","# print(pred)\n","pd.crosstab(test_y, pred3)\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","\n","print(accuracy_score(test_y, pred3))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.7144444444444444\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LCkTOX_knml0"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BhNF0iJBnmiQ"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"Ms1ObHZxTYSI","executionInfo":{"status":"ok","timestamp":1624957643446,"user_tz":-330,"elapsed":557,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"05c25451-1cfe-4acf-b990-394d7f5fd0bd"},"source":["br=pd.read_csv('response1.csv')\n","br"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>-0.752169</td>\n","      <td>-0.637415</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>-0.193796</td>\n","      <td>-1.736283</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>-0.170170</td>\n","      <td>-1.854833</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.569712</td>\n","      <td>-0.833993</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>-0.060625</td>\n","      <td>-2.833202</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1795</th>\n","      <td>1795</td>\n","      <td>-1.910129</td>\n","      <td>-0.160241</td>\n","    </tr>\n","    <tr>\n","      <th>1796</th>\n","      <td>1796</td>\n","      <td>-2.255020</td>\n","      <td>-0.110788</td>\n","    </tr>\n","    <tr>\n","      <th>1797</th>\n","      <td>1797</td>\n","      <td>-0.371105</td>\n","      <td>-1.171092</td>\n","    </tr>\n","    <tr>\n","      <th>1798</th>\n","      <td>1798</td>\n","      <td>-3.717061</td>\n","      <td>-0.024606</td>\n","    </tr>\n","    <tr>\n","      <th>1799</th>\n","      <td>1799</td>\n","      <td>-3.675460</td>\n","      <td>-0.025664</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1800 rows × 3 columns</p>\n","</div>"],"text/plain":["      Unnamed: 0         0         1\n","0              0 -0.752169 -0.637415\n","1              1 -0.193796 -1.736283\n","2              2 -0.170170 -1.854833\n","3              3 -0.569712 -0.833993\n","4              4 -0.060625 -2.833202\n","...          ...       ...       ...\n","1795        1795 -1.910129 -0.160241\n","1796        1796 -2.255020 -0.110788\n","1797        1797 -0.371105 -1.171092\n","1798        1798 -3.717061 -0.024606\n","1799        1799 -3.675460 -0.025664\n","\n","[1800 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"YqzLS7rHTp4T","executionInfo":{"status":"ok","timestamp":1624957651026,"user_tz":-330,"elapsed":572,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"5f9921f0-307f-4e92-9caa-4cbbaa72e60f"},"source":["bc=pd.read_csv('context2_resp.csv')\n","bc"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>-0.685456</td>\n","      <td>-0.700898</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>-0.549854</td>\n","      <td>-0.860463</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>-0.170946</td>\n","      <td>-1.850662</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.366340</td>\n","      <td>-1.181778</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>-0.112833</td>\n","      <td>-2.237731</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1795</th>\n","      <td>1795</td>\n","      <td>-2.238124</td>\n","      <td>-0.112786</td>\n","    </tr>\n","    <tr>\n","      <th>1796</th>\n","      <td>1796</td>\n","      <td>-0.413182</td>\n","      <td>-1.083355</td>\n","    </tr>\n","    <tr>\n","      <th>1797</th>\n","      <td>1797</td>\n","      <td>-0.344726</td>\n","      <td>-1.232422</td>\n","    </tr>\n","    <tr>\n","      <th>1798</th>\n","      <td>1798</td>\n","      <td>-3.658561</td>\n","      <td>-0.026107</td>\n","    </tr>\n","    <tr>\n","      <th>1799</th>\n","      <td>1799</td>\n","      <td>-2.968424</td>\n","      <td>-0.052751</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1800 rows × 3 columns</p>\n","</div>"],"text/plain":["      Unnamed: 0         0         1\n","0              0 -0.685456 -0.700898\n","1              1 -0.549854 -0.860463\n","2              2 -0.170946 -1.850662\n","3              3 -0.366340 -1.181778\n","4              4 -0.112833 -2.237731\n","...          ...       ...       ...\n","1795        1795 -2.238124 -0.112786\n","1796        1796 -0.413182 -1.083355\n","1797        1797 -0.344726 -1.232422\n","1798        1798 -3.658561 -0.026107\n","1799        1799 -2.968424 -0.052751\n","\n","[1800 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":67}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"c9CROT36CTGz","executionInfo":{"status":"ok","timestamp":1624957947347,"user_tz":-330,"elapsed":636,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"1694daea-53ba-41a9-842a-f74c88e10a6d"},"source":["b2c=pd.read_csv('context1_resp.csv')\n","b2c"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>-2.204114</td>\n","      <td>-0.116925</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>-0.283097</td>\n","      <td>-1.400177</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>-0.477088</td>\n","      <td>-0.969132</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-0.427664</td>\n","      <td>-1.055641</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>-0.214626</td>\n","      <td>-1.644252</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1795</th>\n","      <td>1795</td>\n","      <td>-2.288897</td>\n","      <td>-0.106893</td>\n","    </tr>\n","    <tr>\n","      <th>1796</th>\n","      <td>1796</td>\n","      <td>-0.569582</td>\n","      <td>-0.834162</td>\n","    </tr>\n","    <tr>\n","      <th>1797</th>\n","      <td>1797</td>\n","      <td>-0.378488</td>\n","      <td>-1.154852</td>\n","    </tr>\n","    <tr>\n","      <th>1798</th>\n","      <td>1798</td>\n","      <td>-2.364849</td>\n","      <td>-0.098676</td>\n","    </tr>\n","    <tr>\n","      <th>1799</th>\n","      <td>1799</td>\n","      <td>-2.775460</td>\n","      <td>-0.064347</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1800 rows × 3 columns</p>\n","</div>"],"text/plain":["      Unnamed: 0         0         1\n","0              0 -2.204114 -0.116925\n","1              1 -0.283097 -1.400177\n","2              2 -0.477088 -0.969132\n","3              3 -0.427664 -1.055641\n","4              4 -0.214626 -1.644252\n","...          ...       ...       ...\n","1795        1795 -2.288897 -0.106893\n","1796        1796 -0.569582 -0.834162\n","1797        1797 -0.378488 -1.154852\n","1798        1798 -2.364849 -0.098676\n","1799        1799 -2.775460 -0.064347\n","\n","[1800 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"jpX1uTwjUPY6"},"source":["bertc=np.array(bc[['0','1']])\n","bertc1=np.multiply(bertc,0.2)\n","\n","bertr=np.array(br[['0','1']])\n","bertr1=np.multiply(bertr,0.6)\n","\n","bertrc=np.array(b2c[['0','1']])\n","bertrc1=np.multiply(bertrc,0.2)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BY2P7H1W2Wo4","executionInfo":{"status":"ok","timestamp":1624958148603,"user_tz":-330,"elapsed":663,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"25c8da15-e7b7-4fd4-f153-18a20ed8ba91"},"source":["yhats = [bertc1,bertr1,bertrc1]\n","import numpy as np\n","yhats = np.array(yhats)\n","\n","# sum across ensemble members\n","summed = np.sum(yhats, axis=0)\n","# argmax across classes\n","result = np.argmax(summed, axis=1)\n","\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","accuracy_score(result,test_y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7355555555555555"]},"metadata":{"tags":[]},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"Rhwdf-fKPDFa"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"G0UX6u4YPDCH"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5c3RCpnLRWUV"},"source":["#Bert Ensembling"]},{"cell_type":"code","metadata":{"id":"DDT92MeoPDAP"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AZo0xJhgInDy"},"source":["import pandas as pd\n","import numpy as np\n","from scipy import special"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aMMQQdmSInAY"},"source":["br=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/bert/73.77_response_only.csv')\n","\n","br=np.array(br[['0','1']])\n","br=special.softmax(br,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tuZ2K9G9Im-J"},"source":["bc=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/bert/73.66_res+context_1_max.csv')\n","\n","bc=np.array(bc[['0','1']])\n","bc=special.softmax(bc,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vy50DcxpIm72"},"source":["b2c=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/bert/73.11_res+context_2_max.csv')\n","\n","b2c=np.array(b2c[['0','1']])\n","b2c=special.softmax(b2c,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2pkMNFdhM6kB","executionInfo":{"status":"ok","timestamp":1626806701081,"user_tz":-330,"elapsed":5,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"c5ce5d67-4e20-42a3-faed-20d5d65e97e9"},"source":["br"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.47134292, 0.52865708],\n","       [0.82382598, 0.17617402],\n","       [0.84352099, 0.15647901],\n","       ...,\n","       [0.68997175, 0.31002825],\n","       [0.0243053 , 0.9756947 ],\n","       [0.02533775, 0.97466225]])"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"Fgn8hTd_O5vR"},"source":["test_y=df1['labels'].values"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GcVNMEb9MNS5","executionInfo":{"status":"ok","timestamp":1626806731358,"user_tz":-330,"elapsed":3,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"9aaa0130-6493-4c4a-ca6a-ca65db643d75"},"source":["ans=[]\n","yhat=[br,b2c,bc]\n","# yhat=[brcc,br,brc]\n","for i in yhat:\n","  ans.append(np.argmax(i, axis=1))\n","summed = np.sum(ans, axis=0)/len(yhat)\n","res=[]\n","for i in summed:\n","  if i<=0.5:\n","    res.append(0)\n","  else:\n","    res.append(1)\n","\n","print(res)\n","\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support,classification_report\n","# accuracy_score(res,test_y)\n","\n","\n","print(classification_report(test_y, res))\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","\n","print(accuracy_score(test_y, res))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1]\n","              precision    recall  f1-score   support\n","\n","           0       0.74      0.79      0.76       900\n","           1       0.78      0.72      0.75       900\n","\n","    accuracy                           0.76      1800\n","   macro avg       0.76      0.76      0.76      1800\n","weighted avg       0.76      0.76      0.76      1800\n","\n","0.7555555555555555\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uPZxE4KmJ5bQ"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"40rx_MyCmAru","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626805790243,"user_tz":-330,"elapsed":416,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"c6000ea9-3245-4e39-c090-c9ab1e63e32f"},"source":["yhats = [bertr1,bertrc1]\n","import numpy as np\n","yhats = np.array(yhats)\n","\n","# sum across ensemble members\n","summed = np.sum(yhats, axis=0)\n","# argmax across classes\n","result = np.argmax(summed, axis=1)\n","\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","accuracy_score(result,test_y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7466666666666667"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"-mhmOGxSRa6N"},"source":["#Roberta Ensembling"]},{"cell_type":"code","metadata":{"id":"naPUklBHKfEi"},"source":["b2c=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/roberta/77.7_2context+response_batch16+4epoch_190maxlen.csv')\n","\n","b2c=np.array(b2c[['0','1']])\n","b2c=special.softmax(b2c,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FVzanoTvLKJV"},"source":["# /content/drive/MyDrive/sarcasm detection/Results/roberta/77.44_1context+response_batch16+3epoch_180maxlen.csv\n","bc=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/roberta/77.44_1context+response_batch16+3epoch_180maxlen.csv')\n","\n","bc=np.array(bc[['0','1']])\n","bc=special.softmax(bc,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"T7v4RAi2LKF3"},"source":["# /content/drive/MyDrive/sarcasm detection/Results/roberta/77.05_Rshuffle_3epoch_32_noargumentation_only response_lr_2e-5.csv\n","# /content/drive/MyDrive/sarcasm detection/Results/roberta/75_lstm_base_response.csv\n","# /content/drive/MyDrive/sarcasm detection/Results/roberta/76.6_roberta_large_100_32_2e-5_4epoch_preprocessing+@reply+user.csv\n","br=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/roberta/75_lstm_base_response.csv')\n","\n","br=np.array(br[['0','1']])\n","br=special.softmax(br,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NFFf8MPoLKDU","executionInfo":{"status":"ok","timestamp":1626807673941,"user_tz":-330,"elapsed":14,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"fd0ff9e5-298c-4fc2-ae51-2c03e6e2ee03"},"source":["ans=[]\n","yhat=[br,b2c,bc]\n","# yhat=[brcc,br,brc]\n","for i in yhat:\n","  ans.append(np.argmax(i, axis=1))\n","summed = np.sum(ans, axis=0)/len(yhat)\n","res=[]\n","for i in summed:\n","  if i<=0.5:\n","    res.append(0)\n","  else:\n","    res.append(1)\n","\n","print(res)\n","\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support,classification_report\n","# accuracy_score(res,test_y)\n","\n","\n","print(classification_report(test_y, res))\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","\n","print(accuracy_score(test_y, res))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1]\n","              precision    recall  f1-score   support\n","\n","           0       0.77      0.84      0.80       900\n","           1       0.82      0.74      0.78       900\n","\n","    accuracy                           0.79      1800\n","   macro avg       0.79      0.79      0.79      1800\n","weighted avg       0.79      0.79      0.79      1800\n","\n","0.79\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rigsT96FZX8B"},"source":["#Augumentation Ensembling"]},{"cell_type":"code","metadata":{"id":"d9GAmR7tSPu-"},"source":["\n","b3c=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/arg_twitter/76.38_120len_4epoch_32batch_3context.csv')\n","b3c=np.array(b3c[['0','1']])\n","b3c=special.softmax(b3c,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bJ9xwT9_ZddJ"},"source":["br=pd.read_csv('/content/drive/MyDrive/sarcasm detection/Results/arg_twitter/77.27_argumented_32_120_response_4epoch.csv')\n","br=np.array(br[['0','1']])\n","br=special.softmax(br,axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3w9yFsw6ZdaB","executionInfo":{"status":"ok","timestamp":1626809440975,"user_tz":-330,"elapsed":16,"user":{"displayName":"SWAPNIL KUMAR","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsLZIPPZoD8cm6pYXnJ-E5s3jPYct0P1FaVpMB1w=s64","userId":"13060826743241505268"}},"outputId":"fea83713-0b2b-4fe0-e0a1-180de97709c1"},"source":["ans=[]\n","yhat=[br,b3c]\n","# yhat=[brcc,br,brc]\n","for i in yhat:\n","  ans.append(np.argmax(i, axis=1))\n","summed = np.sum(ans, axis=0)/len(yhat)\n","res=[]\n","for i in summed:\n","  if i<=0.5:\n","    res.append(0)\n","  else:\n","    res.append(1)\n","\n","print(res)\n","\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support,classification_report\n","# accuracy_score(res,test_y)\n","\n","\n","print(classification_report(test_y, res))\n","from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n","\n","print(accuracy_score(test_y, res))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1]\n","              precision    recall  f1-score   support\n","\n","           0       0.71      0.88      0.79       900\n","           1       0.84      0.64      0.73       900\n","\n","    accuracy                           0.76      1800\n","   macro avg       0.78      0.76      0.76      1800\n","weighted avg       0.78      0.76      0.76      1800\n","\n","0.76\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"InDPYU2FZdX8"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OObOihPvZdV7"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"A1rl2T0BZdT4"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v_8YwTZKZdR4"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zYulZy5UZdP9"},"source":[""],"execution_count":null,"outputs":[]}]}